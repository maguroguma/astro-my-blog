---
import type { MarkdownBlogPost } from '@/scripts/types.ts';

const { url, post } = Astro.props;

interface Props {
  url: string;
  post: MarkdownBlogPost;
}

const date = new Date(post.pubDate);
const options: Intl.DateTimeFormatOptions = {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
};
const formattedDate = date
  .toLocaleDateString('ja-JP', options)
  .replace(/\//g, '/'); // 日本の形式で日付をフォーマット
---

<article
  class="group rounded-lg border border-gray-200 p-4 transition-colors duration-200 hover:border-blue-700"
>
  <a class="block text-inherit no-underline" href={url}>
    <div class="flex flex-wrap gap-2">
      {
        post.tags.map((tag) => (
          <span class="inline-block rounded-lg bg-gray-200 px-2 py-1 text-sm text-blue-700">
            {tag}
          </span>
        ))
      }
    </div>
    <h3
      class="my-2 text-xl font-bold transition-colors duration-200 group-hover:text-blue-900"
    >
      {post.title}
    </h3>
    <p>{post.description}</p>
    <!-- FIXME: メタ情報はカードの最下部に常に配置したい -->
    <div class="flex items-center gap-4 text-sm text-gray-600">
      <span class="flex items-center gap-1">
        <i class="far fa-calendar"></i>
        {formattedDate}
      </span>
      <!-- FIXME: 算出方法を考える -->
      <!-- <span class="flex items-center gap-1"> -->
      <!--   <i class="far fa-clock"></i> -->
      <!--   {100}分 -->
      <!-- </span> -->
    </div>
  </a>
</article>
