---
import type { MarkdownLayoutProps } from 'astro';
import BaseLayout from '@/layouts/BaseLayout.astro';
import Tag from '@/components/Tag.astro';
import type { MarkdownBlogPost } from '@/scripts/types.ts';
import { aggregateTags } from '@/scripts/tag';

type Props = MarkdownLayoutProps<MarkdownBlogPost>;
const { frontmatter } = Astro.props;

const tags = aggregateTags([frontmatter.tags]);
---

<BaseLayout pageTitle={frontmatter.title}>
  <p class="text-gray-600 mb-4">
    <span class="mr-4"
      >投稿日: {frontmatter.pubDate.toString().slice(0, 10)}</span
    >
    {
      frontmatter.updatedAt && (
        <span class="flex items-center text-gray-500">
          <i class="fas fa-sync mr-2" />
          {frontmatter.updatedAt.toString().slice(0, 10)}
        </span>
      )
    }
  </p>
  <p class="italic text-gray-700 mb-4">{frontmatter.description}</p>
  {
    frontmatter.image && (
      <img
        class="w-72 h-auto mb-4"
        src={frontmatter.image.url}
        alt={frontmatter.image.alt}
      />
    )
  }

  <!-- FIXME: 共通コンポーネントにする -->
  <div class="tags flex flex-wrap gap-2">
    {tags.map((tag) => <Tag tag={tag.tag} />)}
  </div>

  <slot />
</BaseLayout>
