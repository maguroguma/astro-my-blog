---
import BaseLayout from '@/layouts/BaseLayout.astro';
import PostsGrid from '@/components/PostsGrid.astro';
import type { MarkdownBlogPost } from '@/scripts/types.ts';

type Post = {
  url: string;
  frontmatter: MarkdownBlogPost;
};

type Route = {
  params: { tag: string };
  props: { posts: Post[] };
};

// この関数で返した各 params ごとに Astro はビルド時に HTML ファイルを生成する
// params プロパティをもつ各オブジェクトが対応するルートを生成する
export async function getStaticPaths(): Promise<Route[]> {
  const allPosts: Post[] = Object.values(
    import.meta.glob('@/pages/posts/**/*.md', { eager: true }),
  );

  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.frontmatter.tags).flat()),
  ];
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.frontmatter.tags.includes(tag),
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params; // Astro の動的ルーティングのパラメータ
const { posts } = Astro.props;
---

<BaseLayout pageTitle={tag}>
  <h2>
    {posts.length} 件のブログ記事が見つかりました
  </h2>

  <PostsGrid posts={posts} />
</BaseLayout>
