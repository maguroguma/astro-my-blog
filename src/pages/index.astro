---
import BaseLayout from '@/layouts/BaseLayout.astro';
import PostsGrid from '@/components/PostsGrid.astro';
import TagsGroup from '@/components/TagsGroup.astro';
import type { MarkdownBlogPost } from '@/scripts/types.ts';
import { aggregateTags, topTags } from '@/scripts/tag';

type Post = {
  url: string;
  frontmatter: MarkdownBlogPost;
};

const TOP_POSTS_NUM = 4;

const allPosts: Post[] = Object.values(
  import.meta.glob('@/pages/posts/**/*.md', { eager: true }),
);
const recentPosts = allPosts
  .sort(
    (a, b) =>
      new Date(b.frontmatter.pubDate).getTime() -
      new Date(a.frontmatter.pubDate).getTime(),
  )
  .slice(0, TOP_POSTS_NUM);

const recentTagsList = recentPosts.map((post) => post.frontmatter.tags);
const recentTags = aggregateTags(recentTagsList);

const globalTagsList = allPosts.map((post) => post.frontmatter.tags);
const globalTags = aggregateTags(globalTagsList);

const tags = topTags(recentTags, globalTags);

const pageTitle = 'Leverage Copy';
---

<BaseLayout pageTitle={pageTitle}>
  <p>maguroguma の思考の記録</p>

  <div class="flex flex-row items-baseline justify-between">
    <h2>最新の投稿</h2>
    <a class="text-inherit no-underline" href="/blog/">
      すべての投稿を見る <i class="fa fa-angle-double-right ml-1"></i>
    </a>
  </div>

  <PostsGrid posts={recentPosts} />

  <h2>タグから探す</h2>
  <TagsGroup tags={tags} />
</BaseLayout>
